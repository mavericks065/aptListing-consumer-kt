import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.20'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.20'
	id 'au.com.dius.pact' version "4.6.3"
}

sourceSets {
	pact {
		kotlin {
			srcDirs += 'src/pact/kotlin'
		}
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

group = 'com.nig'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
	google()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.0'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.16.0'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'au.com.dius.pact.consumer:junit5:4.6.3'
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '21'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

task pactTest(type: Test) {
	description = 'Runs pact tests'
	group = 'pact'

	testClassesDirs = sourceSets.pact.output.classesDirs
	classpath = sourceSets.pact.runtimeClasspath
	useJUnitPlatform()
	shouldRunAfter test
}

pact {
	publish {
		pactDirectory = "$buildDir/pacts"
		pactBrokerUrl = 'http://localhost:9292'
		version = "1.0.0"
	}
}