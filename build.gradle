import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.20'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.20'
	id 'au.com.dius.pact' version "4.6.3"
}

group = 'com.nig'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
	google()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.0'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.16.0'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'au.com.dius.pact.consumer:junit5:4.6.3'
	testImplementation 'org.hamcrest:hamcrest'
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '21'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

task copyPacts(type: Copy) {
	description 'Copies the generated Pact json file to the provider resources directory'

	from('target/pacts/')
	into('../test/src/test/pact/')
}

def getGitHash = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'rev-parse', '--short', 'HEAD'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

pact {
	publish {
//		pactDirectory = 'consumer/build/pacts'
		pactBrokerUrl = 'http://localhost:9292/'
//		pactBrokerUsername = 'pact_workshop'
//		pactBrokerPassword = 'pact_workshop'
		tags = ['latest']
		consumerVersion = getGitHash()
	}
}